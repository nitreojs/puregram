import { readFile, writeFile } from 'node:fs/promises'
import { resolve } from 'node:path'

import { UpdateType } from '../../packages/puregram/src'

const UPDATES_PATH = resolve(__dirname, '..', '..', 'packages', 'puregram', 'src', 'updates.ts')

const getContext = (key: string, value: string) => {
  if (['edited_message', 'channel_post', 'edited_channel_post'].includes(value)) {
    return 'MessageContext'
  }

  if (value === 'my_chat_member') {
    return 'ChatMemberContext'
  }

  if (value === 'service_message') {
    return 'MessageContext'
  }

  return `${key}Context`
}

const main = async () => {
  let updatesTsContent = await readFile(UPDATES_PATH, 'utf8')

  // INFO: generate-updates-contexts-interface
  {
    const clauses: string[] = []

    // message: Contexts.MessageContext
    for (const [key, value] of Object.entries(UpdateType)) {
      clauses.push(`${value}: Contexts.${getContext(key, value)}`)
    }

    clauses.push('', '[key: string]: Contexts.Context')

    const RawEvents = `interface ContextsMapping {\n${clauses.map(clause => `  ${clause}`).join('\n')}\n}`
    const content = `// @autogenerated generate-updates-contexts-interface start\n${RawEvents}\n// @autogenerated generate-updates-contexts-interface end`

    updatesTsContent = updatesTsContent.replace(/\/\/\s@autogenerated\sgenerate-updates-contexts-interface\sstart\n(.*)\n\/\/\s@autogenerated\sgenerate-updates-contexts-interface\send/is, content)

    console.log('[generate-updates-contexts-interface] successfully generated `ContextsMapping` interface')
  }

  // INFO: generate-updates-raw-events
  {
    const clauses: string[] = []

    // ['message', Contexts.MessageContext],
    for (const [key, value] of Object.entries(UpdateType)) {
      clauses.push(`['${value}', Contexts.${getContext(key, value)}],`)
    }

    const RawEvents = `const rawEvents: [UpdateName, Constructor<Contexts.Context>][] = [\n${clauses.map(clause => `  ${clause}`).join('\n').slice(0, -1)}\n]`
    const content = `// @autogenerated generate-updates-raw-events start\n${RawEvents}\n// @autogenerated generate-updates-raw-events end`

    updatesTsContent = updatesTsContent.replace(/\/\/\s@autogenerated\sgenerate-updates-raw-events\sstart\n(.*)\n\/\/\s@autogenerated\sgenerate-updates-raw-events\send/is, content)

    console.log(`[generate-updates-raw-events] successfully generated ${clauses.length - 1} on() clauses`)
  }

  await writeFile(UPDATES_PATH, updatesTsContent)
}

main().catch(console.error)
