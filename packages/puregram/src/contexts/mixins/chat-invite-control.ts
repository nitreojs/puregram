import * as Methods from '../../generated/methods'

import { Optional } from '../../types/types'

import { Context } from '../context'

import { TargetMixin } from './target'

/** This object represents a mixin that works with all `*ChatInviteLink` methods */
class ChatInviteControlMixin {
  /** Generates new primary invite link */
  exportInviteLink (params?: Optional<Methods.ExportChatInviteLinkParams, 'chat_id'>) {
    return this.telegram.api.exportChatInviteLink({
      chat_id: this.chatId,
      ...params
    })
  }

  /** Creates an additional invite link */
  createInviteLink (params?: Optional<Methods.CreateChatInviteLinkParams, 'chat_id'>) {
    return this.telegram.api.createChatInviteLink({
      chat_id: this.chatId,
      ...params
    })
  }

  /** Edits non-primary invite link created by the bot */
  editInviteLink (link: string, params?: Optional<Methods.EditChatInviteLinkParams, 'chat_id' | 'invite_link'>) {
    return this.telegram.api.editChatInviteLink({
      chat_id: this.chatId,
      invite_link: link,
      ...params
    })
  }

  /** Revokes an invite link generated by a bot */
  revokeInviteLink (link: string, params?: Optional<Methods.RevokeChatInviteLinkParams, 'chat_id' | 'invite_link'>) {
    return this.telegram.api.revokeChatInviteLink({
      chat_id: this.chatId,
      invite_link: link,
      ...params
    })
  }
}

interface ChatInviteControlMixin extends Context, TargetMixin { }

export { ChatInviteControlMixin }
